import axios, { AxiosResponse } from "axios";

const axiosInstance = axios.create({
  baseURL: 'http://localhost:3000',
});


/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GetTodoArgs {
  params: {
    id: string;
  };
}


/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateTodoArgs {
  body: {
    title: string;
    description: string;
    done?: boolean;
  };
}




export function getTodo(args: GetTodoArgs) {
  let path = '/v1/todo/:id';
  
  const params = args.params;

  for (const paramKey in params) {
    if (params.hasOwnProperty(paramKey)) {
      const value = params[paramKey];
      path = path.replace(`:${paramKey}`, value.toString());
   }
  }
    
  return axiosInstance({
    method: "get",
    data: null,
    params: null,
    url: path,
  });
}


export function createTodo(args: CreateTodoArgs) {
  let path = '/v1/todo/';
  
      
  return axiosInstance({
    method: "post",
    data: args.body,
    params: null,
    url: path,
  });
}


const sdk = {
  axiosInstance,
  getTodo,
  createTodo,
  
};

export default sdk;
